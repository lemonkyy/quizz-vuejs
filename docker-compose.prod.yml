networks:
  postgres-backend-bridge:
    driver: bridge
  backend-frontend-bridge:
    driver: bridge
  ollama-backend-bridge:
    driver: bridge
  matomo-frontend-bridge:
    driver: bridge
  mariadb-matomo-bridge:
    driver: bridge
  reverse-proxy-bridge:
    driver: bridge

volumes:
  postgres-data-prod:
  uploads-data-prod:
  node-modules-prod:
  ollama-data-prod:
  mercure-data-prod:
  mercure-config-prod:
  matomo-app-data-prod:
  matomo-db-data-prod:

services:
  reverse-proxy:
    container_name: nginx_quiz
    build:
      context: ./nginx
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/deployer/certs:/etc/nginx/certs:ro
    depends_on:
      - backend
      - frontend
      - mercure
      - matomo
    networks:
      - reverse-proxy-bridge

  #postgres database for symfony
  backend-database:
    image: postgres:17.4-alpine
    container_name: backend_database_quiz
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER_PROD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_PROD}
      POSTGRES_DB: ${POSTGRES_DB_PROD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data/pgdata
    networks:
      - postgres-backend-bridge
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-database}", "-U", "${POSTGRES_USER:-user}"]
      timeout: 5s
      retries: 5
      start_period: 60s

  #backend - symfony
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        DATABASE_URL: ${SYMFONY_DATABASE_URL_PROD}
    container_name: backend_quiz
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET_PROD}
      CORS_ALLOW_ORIGIN: ${SYMFONY_CORS_ALLOW_ORIGIN_PROD}
      DATABASE_URL: ${SYMFONY_DATABASE_URL_PROD}
      JWT_PASSPHRASE: ${SYMFONY_JWT_PASSPHRASE_PROD}
      SPEC_SHAPER_ENCRYPT_KEY: ${SPEC_SHAPER_ENCRYPT_KEY_PROD}
      MERCURE_URL: ${MERCURE_URL_PROD}
      MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL_PROD}
      MERCURE_JWT_SECRET: ${MERCURE_JWT_KEY_PROD}
      JWT_COOKIE_SECURE: TRUE
      SENTRY_DSN: ${SENTRY_DSN_PROD}
    volumes:
      - uploads-data-prod:/app/public/uploads/images
    depends_on:
      - backend-database
    networks:
      - postgres-backend-bridge
      - ollama-backend-bridge
      - reverse-proxy-bridge

  #frontend - vuejs
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: frontend_quiz
    depends_on:
      - backend
    environment:
      NODE_ENV: production
      VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL_PROD}
      VITE_PUBLIC_IMAGES_URL: ${VITE_PUBLIC_IMAGES_URL_PROD}
      VITE_PUBLIC_PFP_URL: ${VITE_PUBLIC_PFP_URL_PROD}
      VITE_MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL_PROD}
      VITE_MATOMO_HOST: ${VITE_MATOMO_HOST_PROD}
      VITE_MATOMO_SITE_ID: ${VITE_MATOMO_SITE_ID_PROD}
      VITE_SENTRY_DSN: ${SENTRY_DSN_PROD}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN_PROD}
      VITE_SENTRY_ORG: ${VITE_SENTRY_ORG_PROD}
      VITE_ALLOWED_HOSTS: ${VITE_ALLOWED_HOSTS_PROD}
      
    networks:
      - reverse-proxy-bridge

  #mercure for frontend live updating
  mercure:
    image: dunglas/mercure:v0.13.0
    container_name: mercure_quiz
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_KEY_PROD}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_KEY_PROD}
      MERCURE_EXTRA_DIRECTIVES: | 
        cors_origins ${MERCURE_CORS_ALLOW_ORIGIN_PROD}
        anonymous
    volumes:
      - mercure-data-prod:/data
      - mercure-config-prod:/config
    networks: 
      - reverse-proxy-bridge

  #ollama - ai
  ollama:
    image: ollama/ollama:0.9.7-rc1
    container_name: ollama_quiz
    restart: unless-stopped
    volumes:
      - ollama-data-prod:/root/.ollama
    networks:
      - ollama-backend-bridge

  
  #mariadb database for matomo
  matomo-database:
    image: mariadb:11.8.2
    container_name: matomo_database_quiz
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD_PROD}
      MYSQL_DATABASE: ${MARIADB_PROD}
      MYSQL_USER: ${MARIADB_USER_PROD}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD_PROD}
    volumes:
      - matomo-app-data-prod:/var/lib/mysql
    networks:
      - mariadb-matomo-bridge
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MARIADB_ROOT_PASSWORD_PROD}"]
      timeout: 5s
      retries: 5
      start_period: 60s

  #matomo - analytics
  matomo:
    image: matomo:fpm-alpine
    container_name: matomo_quiz
    restart: unless-stopped
    depends_on:
      - backend-database
    environment:
      MATOMO_DATABASE_HOST: matomo-database
      MATOMO_DATABASE_TABLES_PREFIX: matomo_
      MATOMO_DATABASE_USERNAME: ${MARIADB_USER_PROD}
      MATOMO_DATABASE_PASSWORD: ${MARIADB_PASSWORD_PROD}
      MATOMO_DATABASE_DBNAME: ${MARIADB_PROD}
    volumes:
      - matomo-db-data-prod:/var/www/html
    networks:
      - mariadb-matomo-bridge
      - reverse-proxy-bridge
