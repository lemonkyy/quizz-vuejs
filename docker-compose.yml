networks:
  database-backend-bridge:
    driver: bridge
  backend-frontend-bridge:
    driver: bridge
  ollama-backend-bridge:
    driver: bridge

services:
  #postgres database
  database:
    image: postgres:17.4-alpine
    container_name: postgres_quiz
    environment:
      POSTGRES_USER: ${POSTGRES_USER_DEV}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_DEV}
      POSTGRES_DB: ${POSTGRES_DB_DEV}
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data:rw
    networks:
      - database-backend-bridge
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-database}", "-U", "${POSTGRES_USER:-user}"]
      timeout: 5s
      retries: 5
      start_period: 60s

  #backend - symfony
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        DATABASE_URL: ${DATABASE_URL_DEV}
    ports:
      - "8000:80"
    container_name: backend_quiz
    environment:
      APP_ENV: dev
      APP_DEBUG: 1
      SHELL_VERBOSITY: 3
      APP_SECRET: ${APP_SECRET_DEV}
      CORS_ALLOW_ORIGIN: '${CORS_ALLOW_ORIGIN}'
      DATABASE_URL: ${DATABASE_URL_DEV}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      SPEC_SHAPER_ENCRYPT_KEY: ${SPEC_SHAPER_ENCRYPT_KEY}
    volumes:
      - ./backend:/app:delegated
      - uploads-data-dev:/app/public/uploads/images
    depends_on:
      - database
    networks:
      - database-backend-bridge
      - backend-frontend-bridge
      - ollama-backend-bridge

  #frontend - vuejs
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:80"
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    container_name: frontend_quiz
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL}
      VITE_PUBLIC_IMAGES_URL: ${VITE_PUBLIC_IMAGES_URL}
      WATCHPACK_POLLING: true
    networks:
      - backend-frontend-bridge

  #ollama - ai
  ollama:
    image: ollama/ollama:latest
    container_name: ollama_quiz
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama-data-dev:/root/.ollama
    networks:
      - ollama-backend-bridge
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: ["gpu"]

  #matomo - analytics
  matomo:
    image: matomo:latest
    container_name: matomo
    restart: unless-stopped
    depends_on:
      - database
    environment:
      MATOMO_DATABASE_HOST: database
      MATOMO_DATABASE_ADAPTER: postgres
      MATOMO_DATABASE_TABLES_PREFIX: matomo_
      MATOMO_DATABASE_USERNAME: ${POSTGRES_USER_DEV}
      MATOMO_DATABASE_PASSWORD: ${POSTGRES_PASSWORD_DEV}
      MATOMO_DATABASE_DBNAME: matomo
    ports:
      - "8081:80"
    volumes:
      - matomo-data-dev:/var/www/html
    networks:
      - backend-frontend-bridge
      - database-backend-bridge


volumes:
  postgres-data-dev:
  uploads-data-dev:
  ollama-data-dev:
  matomo-data-dev:
